---
- set_fact:
    ansible_distro: "{{ ansible_distribution|lower|replace('\"', '') }}"

- name: gather os specific variables
  include_vars: "{{ item }}"
  with_first_found:
    - files:
      - "{{ ansible_distro }}-{{
            ansible_distribution_version|lower|replace('/', '_') }}.yml"
      - "{{ ansible_distro }}-{{ ansible_distribution_release }}.yml"
      - "{{ ansible_distro }}-{{
            ansible_distribution_major_version|lower|replace('/', '_') }}.yml"
      - "{{ ansible_distro }}.yml"
      - "{{ ansible_os_family|lower }}.yml"
      - defaults.yml
      paths:
      - ../vars

- name: check for minimum kernel version
  assert:
    that: ansible_kernel|version_compare(docker_kernel_min_version, ">=")
    msg: >
      docker requires a minimum kernel version of
      {{ docker_kernel_min_version }} on
      {{ ansible_distribution }}-{{ ansible_distribution_version }}

- name: ensure docker requirements packages are installed
  package:
    name: "{{ item }}"
    state: latest
  with_items: "{{ docker_pre_packages }}"
  when: docker_pre_packages is defined

- name: ensure docker repository public key is installed
  apt_key:
    id: "{{ docker_apt_key }}"
    keyserver: hkp://p80.pool.sks-keyservers.net:80
    state: present
  when: docker_apt_key is defined

- name: ensure docker repository is enabled
  apt_repository:
    repo: "{{ docker_apt_repo }}"
    update_cache: true
    state: present
  when: docker_apt_repo is defined

- name: ensure docker packages are installed
  package:
    name: "{{ item }}"
    state: latest
  with_items: "{{ docker_packages }}"
  when: docker_packages is defined

- name: ensure docker service is started and enabled
  service:
    name: "{{ item }}"
    enabled: yes
    state: started
  with_items: "{{ docker_services }}"
  when: docker_services is defined

- name: ensure that docker-py client library has been installed via pip
  pip:
    name: docker-py
    state: latest
